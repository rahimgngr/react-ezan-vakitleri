{"ast":null,"code":"var _jsxFileName = \"/home/rahimgng/vscode/ezan-vakitleri/src/contexts/DistrictContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { createContext, useContext, useState, useMemo } from \"react\";\nimport { useCity } from \"./CityContext\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DistrictContext = /*#__PURE__*/createContext();\nexport const DistrictProvider = ({\n  children\n}) => {\n  _s();\n\n  const [district, setDistrict] = useState([]);\n  const [selDistrict, setSelDistrict] = useState([]);\n  const {\n    selCities\n  } = useCity();\n  const values = useMemo(() => ({\n    district,\n    setDistrict,\n    selDistrict,\n    setSelDistrict\n  }), [district, selDistrict]);\n\n  const getDistrict = async () => {\n    try {\n      await axios(`https://ezanvakti.herokuapp.com/ilceler/${selCities}`).then(res => setDistrict(res.data));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useMemo(() => {\n    getDistrict();\n  }, [selCities]);\n  return /*#__PURE__*/_jsxDEV(DistrictContext.Provider, {\n    value: values,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DistrictProvider, \"D1Fc9hXKjcfkAzoOs/VDLk1J3rE=\", false, function () {\n  return [useCity];\n});\n\n_c = DistrictProvider;\nexport const useDistrict = () => {\n  _s2();\n\n  return useContext(DistrictContext);\n};\n\n_s2(useDistrict, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"DistrictProvider\");","map":{"version":3,"sources":["/home/rahimgng/vscode/ezan-vakitleri/src/contexts/DistrictContext.js"],"names":["createContext","useContext","useState","useMemo","useCity","axios","DistrictContext","DistrictProvider","children","district","setDistrict","selDistrict","setSelDistrict","selCities","values","getDistrict","then","res","data","error","console","log","useDistrict"],"mappings":";;;;AAAA;AACA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,EAA8CC,OAA9C,QAA6D,OAA7D;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,eAAe,gBAAGN,aAAa,EAArC;AAEA,OAAO,MAAMO,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAChD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAgBT,OAAO,EAA7B;AAEA,QAAMU,MAAM,GAAGX,OAAO,CACpB,OAAO;AACLM,IAAAA,QADK;AAELC,IAAAA,WAFK;AAGLC,IAAAA,WAHK;AAILC,IAAAA;AAJK,GAAP,CADoB,EAOpB,CAACH,QAAD,EAAWE,WAAX,CAPoB,CAAtB;;AAUA,QAAMI,WAAW,GAAG,YAAY;AAC9B,QAAI;AACF,YAAMV,KAAK,CAAE,2CAA0CQ,SAAU,EAAtD,CAAL,CAA8DG,IAA9D,CACHC,GAAD,IAASP,WAAW,CAACO,GAAG,CAACC,IAAL,CADhB,CAAN;AAGD,KAJD,CAIE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GARD;;AAUAhB,EAAAA,OAAO,CAAC,MAAM;AACZY,IAAAA,WAAW;AACZ,GAFM,EAEJ,CAACF,SAAD,CAFI,CAAP;AAIA,sBACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAEC,MAAjC;AAAA,cACGN;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAlCM;;GAAMD,gB;UAGWH,O;;;KAHXG,gB;AAoCb,OAAO,MAAMe,WAAW,GAAG;AAAA;;AAAA,SAAMrB,UAAU,CAACK,eAAD,CAAhB;AAAA,CAApB;;IAAMgB,W","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport { createContext, useContext, useState, useMemo } from \"react\";\nimport { useCity } from \"./CityContext\";\nimport axios from \"axios\";\n\nconst DistrictContext = createContext();\n\nexport const DistrictProvider = ({ children }) => {\n  const [district, setDistrict] = useState([]);\n  const [selDistrict, setSelDistrict] = useState([]);\n  const { selCities } = useCity();\n\n  const values = useMemo(\n    () => ({\n      district,\n      setDistrict,\n      selDistrict,\n      setSelDistrict,\n    }),\n    [district, selDistrict]\n  );\n\n  const getDistrict = async () => {\n    try {\n      await axios(`https://ezanvakti.herokuapp.com/ilceler/${selCities}`).then(\n        (res) => setDistrict(res.data)\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useMemo(() => {\n    getDistrict();\n  }, [selCities]);\n\n  return (\n    <DistrictContext.Provider value={values}>\n      {children}\n    </DistrictContext.Provider>\n  );\n};\n\nexport const useDistrict = () => useContext(DistrictContext);\n"]},"metadata":{},"sourceType":"module"}